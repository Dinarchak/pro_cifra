name: deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 20.16.0
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
      - name: recreate api.tsx
        run: |
          cat <<EOF > src/services/api.tsx
          import axios from "axios";
          const api = axios.create({
            baseURL: "http://82.202.142.224:8080/",
            headers: {
              "Content-Type": "application/json"
            }
          });
          export default api;
          EOF
      - name: build
        run: npm ci && npm run build
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: build image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/pro_cifra_frontend:latest .
      - name: push image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/pro_cifra_frontend:latest
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 82.202.142.224  >> ~/.ssh/known_hosts
      - name: script
        run: ssh -i ~/.ssh/id_rsa eroha@82.202.142.224 'sudo ./frontend_script.sh'